var Db = require('mongodb').Db
var Connection = require('mongodb').Connection
var Server = require('mongodb').Server
var mongo = require('mongodb')

exports = module.exports = TaskManager 

function TaskManager() {
	this.server = new Server("127.0.0.1", 27017, {})
	this.db = new Db("testProject", this.server, {native_parser:true})
}

TaskManager.prototype.getTask = function(callback) {
	this.db.open(function(err, db) {
		db.collection("test", function(err, collection) {
			var cursor = collection.find({$or: [{state: 'wait'}, {state: 'executing'}]})
			cursor.sort('taskId').limit(1)
			cursor.toArray(function(err, docs) {
				var task = {}
				if (docs != null) {
					task = {
						taskId: docs[0].taskId,
						func: docs[0].func,
						args: docs[0].args
					}
				}
				console.log("id: " + task.taskId)
				db.close()
				callback(task)
			})
		})
	})
}

TaskManager.prototype.setResult = function(result) {
	this.db.open(function(err, db) {
		db.collection("test", function(err, collection) {
			var cursor = collection.find({taskId:result.taskId})
			cursor.toArray(function(err, docs) {
				var task = docs[0] 
				if (task.state == 'wait') {
					task.state = 'executing'
				} else if (task.state == 'executing') {
					if (task.result.toString() == result.result.toString()) {
						task.state = 'done'
					}
				}
				task.result = result.result;
				console.log("taskId: " + task.taskId)
				collection.update({taskId:result.taskId}, task, {safe:true}, function(err) {})
				db.close()
			})
		})
	})
}

